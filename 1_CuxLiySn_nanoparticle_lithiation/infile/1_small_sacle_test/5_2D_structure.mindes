###### whether to test this input file
InputFile.debug = true

###### Init Solver
Solver.Mesh.Nx = 50
Solver.Mesh.Ny = 50
Solver.Mesh.Nz = 1
Solver.Loop.begin_step = 0
# Solver.Mesh.BoundaryCondition : 0 - FIXED , 1 - PERIODIC , 2 - ADIABATIC
Solver.Mesh.BoundaryCondition.x_up = 2
Solver.Mesh.BoundaryCondition.x_down = 2

Solver.PCT.TimeInterval.dt = 1.000000

Solver.Loop.screen_output_step = 50
Solver.Loop.vts_output_step = 50
Solver.Loop.data_output_step = 100000
Postprocess.PCT.VTS.phi = true
Postprocess.PCT.VTS.phi_index = true
Postprocess.PCT.VTS.con = true
Postprocess.PCT.VTS.potential = true
Postprocess.PCT.VTS.phi_name = true
Solver.Phi.is_normalize = true
Solver.Parallel.openmp_thread_counts = 5

<AUTO> Solver.Loop.stop = false

Solver.Phases = {[(liquid),(Cu,Li)],[(LiSn),(Cu,Li)],[(Li7Sn3),(Cu,Li)],[(CuLi2Sn2),(Cu,Li)],[(Cu2LiSn),(Cu,Li)],[(Cu),(Cu,Li)],[(CuLi2Sn),(Cu,Li)]}
Solver.Comps = (Cu,Li)

# .matrix = {[(phi_index),(phi_name),(phi_comp_0_value, phi_comp_1_value, ... )],[(total_comp_0_value, total_comp_1_value, ... )],[(temp_value)]} 
Preprocess.Microstructure.matrix = {[(0),(LiSn),(0.0,0.5)],[(0.0,0.5)],[(0.0)]}
Preprocess.Microstructure.geometry_layer_number = 1
# .property = (phi_index, phi_name, geometry_type, rotation_gauge, reverse_region) 
#              geometry_type  : 0 - None, 1 - Ellipsoid, 2 - Polyhedron 
#              rotation_gauge : 0 - XYX, 1 - XZX, 2 - YXY, 3 - YZY, 4  - ZXZ, 5  - ZYZ 
#                               6 - XYZ, 7 - XZY, 8 - YXZ, 9 - YZX, 10 - ZXY, 11 - ZYX 
Preprocess.Microstructure.geometry_layer_0.property = (1,Li7Sn3,1,1,false)
# .ellipsoid = [(core_x,core_y,core_z),(radius_x,radius_y,radius_z),(rotation_radian_1,rotation_radian_2,rotation_radian_3)] 
Preprocess.Microstructure.geometry_layer_0.ellipsoid = [(25,25,0),(15,15,0),(0,0,0)]
Preprocess.Microstructure.geometry_layer_0.T = 0.000000
Preprocess.Microstructure.geometry_layer_0.phi = 1.000000
Preprocess.Microstructure.geometry_layer_0.is_normalized = TRUE
# .x = [(comp_0_name,comp_0_value),(comp_1_name,comp_1_value), ...] 
Preprocess.Microstructure.geometry_layer_0.x = [(Cu,0.0),(Li,0.7)]
