###### whether to test this input file
InputFile.debug = true

###### Init Solver
Solver.Mesh.Nx = 100
Solver.Mesh.Ny = 100
Solver.Mesh.Nz = 1
Solver.Loop.screen_output_step = 10000
Solver.Loop.vts_output_step = 10000
Solver.Loop.data_output_step = 10000
Postprocess.PCT.VTS.phi_index = true

Solver.Phases = {[(Grain0),()]}

################################# first step
###### Microstructure
# .property = (phi_index, phi_name, geometry_type, rotation_gauge, reverse_region) 
#              geometry_type  : 0 - None, 1 - Ellipsoid, 2 - Polyhedron 
#              rotation_gauge : 0 - XYX, 1 - XZX, 2 - YXY, 3 - YZY, 4  - ZXZ, 5  - ZYZ 
#                               6 - XYZ, 7 - XZY, 8 - YXZ, 9 - YZX, 10 - ZXY, 11 - ZYX 
# Preprocess.Microstructure.matrix = {[(0),(Grain0),()],[()],[(0.0)]}
# Preprocess.Microstructure.Matrix.phi = 0.000000
# Preprocess.Microstructure.geometry_layer_number = 3
# Preprocess.Microstructure.geometry_layer_0.property = (0,Grain0,1,1,false)
# Preprocess.Microstructure.geometry_layer_0.ellipsoid = [(50.0,50.0,0.0),(40.0,20.0,0.0),(0.0,0.0,0.0)]
# Preprocess.Microstructure.geometry_layer_0.phi = 1.000000
# Preprocess.Microstructure.geometry_layer_0.is_normalized = false
# Preprocess.Microstructure.geometry_layer_1.property = (0,Grain0,1,1,false)
# Preprocess.Microstructure.geometry_layer_1.ellipsoid = [(50.0,60.0,0.0),(40.0,20.0,0.0),(0.0,30.0,0.0)]
# Preprocess.Microstructure.geometry_layer_1.phi = 1.000000
# Preprocess.Microstructure.geometry_layer_1.is_normalized = false
# Preprocess.Microstructure.geometry_layer_2.property = (0,Grain0,1,1,false)
# Preprocess.Microstructure.geometry_layer_2.ellipsoid = [(40.0,50.0,0.0),(40.0,20.0,0.0),(0.0,90.0,0.0)]
# Preprocess.Microstructure.geometry_layer_2.phi = 1.000000
# Preprocess.Microstructure.geometry_layer_2.is_normalized = false


################################# second step
Preprocess.Microstructure.is_datafile_init = true
Preprocess.Microstructure.datafile_path = voronoi2d_inPhis.dat
# .property = [(phi_index_begin, phi_index_end), (phi_name, ... ),(phi_weight, ...),(in phi_a, in phi_b, in phi_c)] 
Preprocess.Microstructure.voronoi_inPhis.property = [(1,60),(Grain0),(1.0),(0)]
# .box = [(box_origin_point),(box_end_point)] 
Preprocess.Microstructure.voronoi_inPhis.box = [(0,0,0),(100,100,0)]
Preprocess.Microstructure.voronoi_inPhis.rand_seed = 0
Preprocess.Microstructure.voronoi.point_distance = 7