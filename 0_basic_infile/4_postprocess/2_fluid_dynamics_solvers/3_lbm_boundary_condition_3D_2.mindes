###### whether to test this input file
InputFile.debug = true

###### solver init
Solver.Mesh.Nx = 100
Solver.Mesh.Ny = 100
Solver.Mesh.Nz = 50
Solver.Mesh.dr = 1.000000
Solver.Mesh.BoundaryCondition.x_up = 2
Solver.Mesh.BoundaryCondition.x_down = 2
Solver.Mesh.BoundaryCondition.y_up = 2
Solver.Mesh.BoundaryCondition.y_down = 2
Solver.Mesh.BoundaryCondition.z_up = 2
Solver.Mesh.BoundaryCondition.z_dowm = 2

Solver.Loop.begin_step = 0
Solver.Loop.end_step = 0
#Solver.Loop.end_step = 40000
Solver.Loop.screen_output_step = 1000
Solver.Loop.vts_output_step = 1000
Solver.Loop.data_output_step = 1000000

Solver.PCT.TimeInterval.dt = 1.0
Postprocess.PCT.VTS.phi = true

Solver.Parallel.openmp_thread_counts = 5

Solver.Phases = {[(fluid),()],[(solid),()]}
Solver.Comps = ()

###### modules init
# ModelsManager.Phi.equation : 0 - Const, 1 - AllenCahn Standard, 2 - AllenCahn Pairwise, 3 - CahnHilliard Standard
ModelsManager.Phi.equation = 2
Solver.Phi.is_normalize = true
# ModelsManager.Phi.Lij.const  = Lij_value 
#                      .matrix = [(phi_i, phi_j, Lij_value), ... ] 
ModelsManager.Phi.Lij.const = 0.010000
# ModelsManager.Phi.InterfaceEnergy.int_gradient : 0 - Steinbach_1996 , 1 - Steinbach_1999 , 2 - Steinbach_G2009
ModelsManager.Phi.InterfaceEnergy.int_gradient = 0
# ModelsManager.Phi.InterfaceEnergy.int_potential : 0 - Nestler_Well , 1 - Nestler_Obstacle , 2 - Steinbach_P2009
ModelsManager.Phi.InterfaceEnergy.int_potential = 1
ModelsManager.Phi.InterfaceEnergy.int_width = 3.000000
# ModelsManager.Phi.xi_ab.const  = xi_ab 
#                        .matrix = [(phi_a, phi_b, xi_ab_value), ...] 
ModelsManager.Phi.xi_ab.const = 1.000000
# ModelsManager.Phi.xi_abc.const  = xi_ab 
#                         .matrix = [(phi_a, phi_b, phi_c, xi_abc_value), ...] 
ModelsManager.Phi.xi_abc.const = 0.000000

###### microstructure init
Preprocess.Microstructure.matrix = {[(0),(fluid),()],[()],[(0.0)]}
Preprocess.Microstructure.geometry_layer_number = 3
Preprocess.Microstructure.geometry_layer_0.property = (1,solid,2,1,false)
Preprocess.Microstructure.geometry_layer_0.polyhedron = {[(40,60,25)],[(25,50,20),(50,50,20),(50,50,21)],[(50,50,20),(50,75,20),(50,50,21)],[(50,75,20),(25,75,20),(50,75,21)],[(25,75,20),(25,50,20),(25,50,21)],[(25,75,20),(25,50,20),(26,50,20)],[(0,0,0)]}
Preprocess.Microstructure.geometry_layer_1.property = (1,solid,2,1,false)
Preprocess.Microstructure.geometry_layer_1.polyhedron = {[(60,60,35)],[(75,50,30),(50,50,30),(50,50,31)],[(50,50,30),(50,75,30),(50,50,31)],[(50,75,30),(75,75,30),(50,75,31)],[(75,75,30),(75,50,30),(75,50,31)],[(75,75,30),(75,50,30),(76,50,30)],[(0,0,0)]}
Preprocess.Microstructure.geometry_layer_2.property = (1,solid,2,1,false)
Preprocess.Microstructure.geometry_layer_2.polyhedron = {[(60,40,45)],[(50,50,40),(75,50,40),(75,50,41)],[(75,50,40),(75,25,40),(75,25,41)],[(75,25,40),(50,25,40),(50,25,41)],[(50,25,40),(50,50,40),(50,50,41)],[(50,25,40),(50,50,40),(51,50,40)],[(0,0,0)]}

# Preprocess.relax_interface = (relax_steps, output_steps, fix_phi_after_relax) 
Preprocess.relax_interface = (100,10,false)

Postprocess.physical_fields = (false,true,false)
###### fluid field
Postprocess.FluidDynamics.solver = 2
Postprocess.FluidDynamics.LatticeBoltzmann.fluid_dt = 1.0
Postprocess.FluidDynamics.LatticeBoltzmann.liquid_viscosity = 0.050000
Postprocess.FluidDynamics.LatticeBoltzmann.liquid_density = 5.000000
Postprocess.FluidDynamics.LatticeBoltzmann.max_iterate_steps = 2000
Postprocess.FluidDynamics.LatticeBoltzmann.debug_solver = true
Postprocess.FluidDynamics.LatticeBoltzmann.debug_output_step = 10
# Postprocess.FluidDynamics.LatticeBoltzmann.solid_phases = (phase_name, ... ) 
Postprocess.FluidDynamics.LatticeBoltzmann.solid_phases = (solid)
Postprocess.FluidDynamics.LatticeBoltzmann.momentum_accuracy = 1e-4
# .LatticeBoltzmann.boundary_condition = (down_x,up_x,down_y,up_y) 
#                                        0 - Wall, 1 - Period, 2 - Free, 3 - Pressure, 4 - Normal_Flow 
Postprocess.FluidDynamics.LatticeBoltzmann.boundary_condition = (0,0,0,0,3,2)
Postprocess.FluidDynamics.LatticeBoltzmann.BC_Down_X.wall_roughness = 0.100000
Postprocess.FluidDynamics.LatticeBoltzmann.BC_Up_X.wall_roughness = 0.100000
Postprocess.FluidDynamics.LatticeBoltzmann.BC_Down_Y.wall_roughness = 0.100000
Postprocess.FluidDynamics.LatticeBoltzmann.BC_Up_Y.wall_roughness = 0.100000
Postprocess.FluidDynamics.LatticeBoltzmann.BC_Down_Z.pressure = 1.800000




