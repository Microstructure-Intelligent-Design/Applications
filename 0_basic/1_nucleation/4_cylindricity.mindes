###### custom functions
# Define.Var = A,0.1
# Define.Func = ABC@{[(A*PHI<1>)]}@
# default field variable: "PHI", "dPHI_dt", "lap_PHI", "PHI_X", "dPHI_X_dt", "X", "dX_dt", "T", "dT_dt", "lap_T", "P", "dP_dt", "lap_P", "PHI_P", "dPHI_P_dt", "lap_PHI_P"
# default functions		: "pow", "sqrt", "abs", "exp", "ln", "log", "sin", "cos", "tan", "asin", "acos", "atan"

InputFile.debug = true

Solver.Mesh.Nx = 64
Solver.Mesh.Ny = 64
Solver.Mesh.Nz = 64

# Solver.Phases = {[(phase0),(c0, c1, ... )], [(phase1),(c0, c1, ... )], ... } 
Solver.Phases = {[(Grain),()]}

Postprocess.PCT.VTS.phi_index = true

Solver.Loop.vts_output_step = 100

# .matrix = {[(phi_index),(phi_name),(phi_comp_0_value, phi_comp_1_value, ... )],[(total_comp_0_value, total_comp_1_value, ... )],[(temp_value)]} 
Preprocess.Microstructure.matrix = {[(0),(Grain),()],[()],[(0.0)]}

Preprocess.Microstructure.geometry_layer_number = 1
# .property = (phi_index, phi_name, geometry_type, rotation_gauge, reverse_region) 
#              geometry_type  : 0 - None, 1 - Ellipsoid, 2 - Polyhedron, 3 - Cylindricity 
#              rotation_gauge : 0 - XYX, 1 - XZX, 2 - YXY, 3 - YZY, 4  - ZXZ, 5  - ZYZ 
#                               6 - XYZ, 7 - XZY, 8 - YXZ, 9 - YZX, 10 - ZXY, 11 - ZYX 
Preprocess.Microstructure.geometry_layer_0.property = (1,Grain,3,1,false)
# .cylindricity = [(core_x,core_y,core_z),(radius_x,radius_y,half_height),(rotation_angle_1,rotation_angle_2,rotation_angle_3)] 
Preprocess.Microstructure.geometry_layer_0.cylindricity = [(32,32,32),(10,10,20),(30,30,0)]
