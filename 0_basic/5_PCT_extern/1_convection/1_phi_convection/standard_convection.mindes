###### whether to test this input file
InputFile.debug = true

###### solver init
Solver.Mesh.Nx = 100
Solver.Mesh.Ny = 100
Solver.Mesh.Nz = 1
Solver.Mesh.dr = 1.000000
Solver.Mesh.BoundaryCondition.x_up = 1
Solver.Mesh.BoundaryCondition.x_down = 1
Solver.Mesh.BoundaryCondition.y_up = 1
Solver.Mesh.BoundaryCondition.y_down = 1
Solver.Mesh.BoundaryCondition.z_up = 1
Solver.Mesh.BoundaryCondition.z_dowm = 1

Solver.Loop.begin_step = 0
Solver.Loop.end_step = 30000
Solver.Loop.screen_output_step = 1000
Solver.Loop.vts_output_step = 1000
Solver.Loop.data_output_step = 1000000

Solver.PCT.TimeInterval.dt = 1.0
Postprocess.PCT.VTS.phi_index = true
Solver.Phi.is_normalize = true

Solver.Parallel.openmp_thread_counts = 5

Solver.Phases = {[(fluid),()],[(solid),()]}
Solver.Comps = ()

###### PCT init
ModelsManager.Phi.equation = 1
# ModelsManager.Phi.Lij.const  = Lii_value 
#                      .matrix = [(phi_i, phi_j, Lij_value), ... ] 
ModelsManager.Phi.Lij.const = 0.010000
# ModelsManager.Phi.InterfaceEnergy.int_gradient : 3 - Int_GStandard
ModelsManager.Phi.InterfaceEnergy.int_gradient = 3
# ModelsManager.Phi.xi_a.const  = xi_a 
#                       .matrix = [(phi_a, xi_a_value), ...] 
ModelsManager.Phi.xi_a.const = 1.000000
# ModelsManager.Phi.BulkEnergy.const = [(phi_name, bulk_energy), ... ]
ModelsManager.Phi.BulkEnergy.const = [(fluid,0.0),(solid,-0.051)]
# ModelsManager.Phi.BulkEnergy.type : 0 - DoubleWell, 1 - LQ_Chen, 2 - Y_Wang, 3 - ?
ModelsManager.Phi.BulkEnergy.type = 0
ModelsManager.Phi.BulkEnergy.DoubleWell.A = 1.000000
ModelsManager.Phi.BulkEnergy.DoubleWell.B = 1.000000
ModelsManager.Phi.convection = TRUE

###### microstructure init
Preprocess.Microstructure.matrix = {[(0),(fluid),()],[()],[(0.0)]}
Preprocess.Microstructure.geometry_layer_number = 1
# .property = (phi_index, phi_name, geometry_type, rotation_gauge, reverse_region) 
#              geometry_type  : 0 - None, 1 - Ellipsoid, 2 - Polyhedron 
#              rotation_gauge : 0 - XYX, 1 - XZX, 2 - YXY, 3 - YZY, 4  - ZXZ, 5  - ZYZ 
#                               6 - XYZ, 7 - XZY, 8 - YXZ, 9 - YZX, 10 - ZXY, 11 - ZYX 
Preprocess.Microstructure.geometry_layer_0.property = (1,solid,1,1,false)
Preprocess.Microstructure.geometry_layer_0.ellipsoid = [(12,87,0),(10,10,0),(0,0,0)]

Postprocess.physical_fields = (false,true,false)
###### fluid field
Postprocess.FluidDynamics.solver = 2
# tau = viscosity / fluid_dt / Cs2 + 0.5 
Postprocess.FluidDynamics.LatticeBoltzmann.liquid_viscosity = 0.100000
Postprocess.FluidDynamics.LatticeBoltzmann.liquid_density = 1.000000
Postprocess.FluidDynamics.LatticeBoltzmann.max_iterate_steps = 10000
Postprocess.FluidDynamics.LatticeBoltzmann.debug_solver = true
Postprocess.FluidDynamics.LatticeBoltzmann.debug_output_step = 100
# Postprocess.FluidDynamics.LatticeBoltzmann.solid_phases = (phase_name, ... ) 
Postprocess.FluidDynamics.LatticeBoltzmann.solid_phases = ()
Postprocess.FluidDynamics.LatticeBoltzmann.momentum_accuracy = 1e-5
# Postprocess.FluidDynamics.LatticeBoltzmann.source = () 
#             0 - Forces 
Postprocess.FluidDynamics.LatticeBoltzmann.source = ()
# .LatticeBoltzmann.boundary_condition = (down_x,up_x,down_y,up_y) 
#                                        0 - Wall, 1 - Period, 2 - Free, 3 - Pressure, 4 - Normal_Flow 
#                            .pressure = p0 , density0 = p0 / Cs^2 , Cs = 1 / sqrt(3) 
Postprocess.FluidDynamics.LatticeBoltzmann.boundary_condition = (0,0,0,0)
Postprocess.FluidDynamics.LatticeBoltzmann.BC_Down_X.wall_roughness = 1.000000
Postprocess.FluidDynamics.LatticeBoltzmann.BC_Down_X.wall_speed = 0.000000
Postprocess.FluidDynamics.LatticeBoltzmann.BC_Up_X.wall_roughness = 1.000000
Postprocess.FluidDynamics.LatticeBoltzmann.BC_Up_X.wall_speed = 0.000000
Postprocess.FluidDynamics.LatticeBoltzmann.BC_Down_Y.wall_roughness = 1.000000
Postprocess.FluidDynamics.LatticeBoltzmann.BC_Down_Y.wall_speed = 0.000000
Postprocess.FluidDynamics.LatticeBoltzmann.BC_Up_Y.wall_roughness = 1.000000
Postprocess.FluidDynamics.LatticeBoltzmann.BC_Up_Y.wall_speed = 0.010000

